#!/bin/bash

function help() {
cat<<EOF
        Not OK, man!
EOF
}

function invoke() {
#	echo "invoking: $1 || $2"

	local word="$1"
	local data="$2"

	shift 2

	curl -s "${URL}/${word}" --header "X-Auth-PSK: ${PASS}" --data-binary "${data}" "$@" >/dev/null
}

function invokeIrcCommand() {
	invoke IRCC \
		"<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"><s:Body><u:X_SendIRCC xmlns:u=\"urn:schemas-sony-com:service:IRCC:1\"><IRCCCode>$1</IRCCCode></u:X_SendIRCC></s:Body></s:Envelope>" \
		--header "Connection: Keep-Alive" --header 'SOAPACTION: "urn:schemas-sony-com:service:IRCC:1#X_SendIRCC"' --header "Content-Type: text/xml; charset=UTF-8"
}

function getInputNames() {
        invoke "avContent" '{"method":"getContentList","id":88,"params":[{"stIdx":0,"cnt":50,"uri":"extInput:hdmi"}],"version":"1.5"}' | jq .result[][].title
}

function getInputs() {
        invoke "avContent" '{"method":"getContentList","id":88,"params":[{"stIdx":0,"cnt":50,"uri":"extInput:hdmi"}],"version":"1.5"}' 
}

function getInputUrls() {
        invoke "avContent" '{"method":"getContentList","id":88,"params":[{"stIdx":0,"cnt":50,"uri":"extInput:hdmi"}],"version":"1.5"}' | jq .result[][].uri
}

function getInputNameToUrlMapping() {
        invoke "avContent" '{"method":"getContentList","id":88,"params":[{"stIdx":0,"cnt":50,"uri":"extInput:hdmi"}],"version":"1.5"}' | jq ".result[][] | .title + \" â€”>\" + .uri "
}

function setInput() {
#	echo here1: $1
	invoke "avContent" "{\"method\":\"setPlayContent\",\"id\":101,\"params\":[{\"uri\":\"extInput:hdmi?port=${1}\"}],\"version\":\"1.0\"}"
}

#add following to .bashrc:
#
##sonyTv autocompletion
#[ -f /home/mmucha/Dropbox/skripty/bashScripts/tv ] && source <(/home/mmucha/Dropbox/skripty/bashScripts/tv autocomplete tv)
function autocomplete() {
	autocomplateFunction=_${1}_autocomplete
cat<<EOF
function ${autocomplateFunction}() {
	local cur="\${COMP_WORDS[COMP_CWORD]}"
	local prev="\${COMP_WORDS[COMP_CWORD-1]}"

	#something like index of word being autocompleted, counting from 1, and IIUC 1 is the name of command, ie, first param is 2
	local index="\${#COMP_WORDS[@]}"
	local first="\${COMP_WORDS[0]}"

	#echo \$index \$first \$cur \$prev \$COMP_CWORD done >> /tmp/debug
	if [[ \$index -eq 2 ]]; then
		COMPREPLY=( \$(compgen -W "multi-irq irq changeAudioSink changeDefaultAudioSink list-irq-data getInputUrls getInputNameToUrlMapping getInputNames getInputs setInput" -- \${cur}) )
	fi
}

complete -F ${autocomplateFunction} ${1}
EOF
}

function jqListAudioSinksTemplate() {
cat<<EOF
def parse:
  def interpret:
    if . == null then .
    elif startswith("\"") and endswith("\"")
    then  .[1:-1]
    else tonumber? // .
    end;
  (capture( "[ \t]*(?<key>[^:= ]*)(: | = )(?<value>.*)" ) // null)
  | if . then .value = (.value | interpret) else . end
;

# Construct one object for each "segment"  
def construct(s): 
  [ foreach (s, 0) as \$kv (null;
      if \$kv == 0 or \$kv.index
      then .complete = .accumulator | .accumulator = \$kv
      else .complete = null | .accumulator += \$kv
      end;
      .complete // empty ) ]
;


construct(inputs | parse | select(.) | {(.key):.value})
| map((.index|tostring)+" "+.["application.name"]+"(media=\""+.["media.name"]+"\", pid="+.["application.process.id"]+")")
| .[]

EOF
}


function changeAudioSink() {
	sinks=$(pacmd list-sink-inputs | jq -nRr -f <(jqListAudioSinksTemplate) | fzf -m --with-nth 2.. --bind ctrl-a:select-all,ctrl-d:deselect-all,ctrl-t:toggle-all | awk '{print $1}' )
	target=$(pacmd list-sinks | grep "index\|name:" | tr -d "\n" | sed "s/\* *index: \([0-9]*\)/index: \1(*)/;s/ *index: \([0-9]*\)/\1/g;s/[ \t]*name: <\([^>]*\)>/\t\1\n/g" | fzf | sed "s/^\([0-9]*\).*/\1/")
	echo "${sinks}" | xargs -I '{}' pacmd move-sink-input {} "${target}"
}

#to regenerate: echo '{"method":"getRemoteControllerInfo","id":54,"params":[],"version":"1.0"}' | ./doc/launchOnSony.sh system | jq -c .result[1] | jq '. - map(. | select (.name | contains("Partner")) ) - map(. | select (.name | test("Num\\d")) )' | jq '.[] += {"type": "irq"}' | jq > /tmp/abc 
function irqCommandsJson() {
cat<<EOF
[
  {
    "name": "Enter",
    "value": "AAAAAQAAAAEAAAALAw==",
    "type": "irq"
  },
  {
    "name": "GGuide",
    "value": "AAAAAQAAAAEAAAAOAw==",
    "type": "irq"
  },
  {
    "name": "ChannelUp",
    "value": "AAAAAQAAAAEAAAAQAw==",
    "type": "irq"
  },
  {
    "name": "ChannelDown",
    "value": "AAAAAQAAAAEAAAARAw==",
    "type": "irq"
  },
  {
    "name": "VolumeUp",
    "value": "AAAAAQAAAAEAAAASAw==",
    "type": "irq"
  },
  {
    "name": "VolumeDown",
    "value": "AAAAAQAAAAEAAAATAw==",
    "type": "irq"
  },
  {
    "name": "Mute",
    "value": "AAAAAQAAAAEAAAAUAw==",
    "type": "irq"
  },
  {
    "name": "TvPower",
    "value": "AAAAAQAAAAEAAAAVAw==",
    "type": "irq"
  },
  {
    "name": "Audio",
    "value": "AAAAAQAAAAEAAAAXAw==",
    "type": "irq"
  },
  {
    "name": "MediaAudioTrack",
    "value": "AAAAAQAAAAEAAAAXAw==",
    "type": "irq"
  },
  {
    "name": "Tv",
    "value": "AAAAAQAAAAEAAAAkAw==",
    "type": "irq"
  },
  {
    "name": "Input",
    "value": "AAAAAQAAAAEAAAAlAw==",
    "type": "irq"
  },
  {
    "name": "TvInput",
    "value": "AAAAAQAAAAEAAAAlAw==",
    "type": "irq"
  },
  {
    "name": "TvAntennaCable",
    "value": "AAAAAQAAAAEAAAAqAw==",
    "type": "irq"
  },
  {
    "name": "WakeUp",
    "value": "AAAAAQAAAAEAAAAuAw==",
    "type": "irq"
  },
  {
    "name": "PowerOff",
    "value": "AAAAAQAAAAEAAAAvAw==",
    "type": "irq"
  },
  {
    "name": "Sleep",
    "value": "AAAAAQAAAAEAAAAvAw==",
    "type": "irq"
  },
  {
    "name": "Right",
    "value": "AAAAAQAAAAEAAAAzAw==",
    "type": "irq"
  },
  {
    "name": "Left",
    "value": "AAAAAQAAAAEAAAA0Aw==",
    "type": "irq"
  },
  {
    "name": "SleepTimer",
    "value": "AAAAAQAAAAEAAAA2Aw==",
    "type": "irq"
  },
  {
    "name": "Analog2",
    "value": "AAAAAQAAAAEAAAA4Aw==",
    "type": "irq"
  },
  {
    "name": "TvAnalog",
    "value": "AAAAAQAAAAEAAAA4Aw==",
    "type": "irq"
  },
  {
    "name": "Display",
    "value": "AAAAAQAAAAEAAAA6Aw==",
    "type": "irq"
  },
  {
    "name": "Jump",
    "value": "AAAAAQAAAAEAAAA7Aw==",
    "type": "irq"
  },
  {
    "name": "PicOff",
    "value": "AAAAAQAAAAEAAAA+Aw==",
    "type": "irq"
  },
  {
    "name": "PictureOff",
    "value": "AAAAAQAAAAEAAAA+Aw==",
    "type": "irq"
  },
  {
    "name": "Teletext",
    "value": "AAAAAQAAAAEAAAA/Aw==",
    "type": "irq"
  },
  {
    "name": "Video1",
    "value": "AAAAAQAAAAEAAABAAw==",
    "type": "irq"
  },
  {
    "name": "Video2",
    "value": "AAAAAQAAAAEAAABBAw==",
    "type": "irq"
  },
  {
    "name": "AnalogRgb1",
    "value": "AAAAAQAAAAEAAABDAw==",
    "type": "irq"
  },
  {
    "name": "Home",
    "value": "AAAAAQAAAAEAAABgAw==",
    "type": "irq"
  },
  {
    "name": "Exit",
    "value": "AAAAAQAAAAEAAABjAw==",
    "type": "irq"
  },
  {
    "name": "PictureMode",
    "value": "AAAAAQAAAAEAAABkAw==",
    "type": "irq"
  },
  {
    "name": "Confirm",
    "value": "AAAAAQAAAAEAAABlAw==",
    "type": "irq"
  },
  {
    "name": "Up",
    "value": "AAAAAQAAAAEAAAB0Aw==",
    "type": "irq"
  },
  {
    "name": "Down",
    "value": "AAAAAQAAAAEAAAB1Aw==",
    "type": "irq"
  },
  {
    "name": "ClosedCaption",
    "value": "AAAAAgAAAKQAAAAQAw==",
    "type": "irq"
  },
  {
    "name": "Component1",
    "value": "AAAAAgAAAKQAAAA2Aw==",
    "type": "irq"
  },
  {
    "name": "Component2",
    "value": "AAAAAgAAAKQAAAA3Aw==",
    "type": "irq"
  },
  {
    "name": "Wide",
    "value": "AAAAAgAAAKQAAAA9Aw==",
    "type": "irq"
  },
  {
    "name": "EPG",
    "value": "AAAAAgAAAKQAAABbAw==",
    "type": "irq"
  },
  {
    "name": "PAP",
    "value": "AAAAAgAAAKQAAAB3Aw==",
    "type": "irq"
  },
  {
    "name": "TenKey",
    "value": "AAAAAgAAAJcAAAAMAw==",
    "type": "irq"
  },
  {
    "name": "BSCS",
    "value": "AAAAAgAAAJcAAAAQAw==",
    "type": "irq"
  },
  {
    "name": "Ddata",
    "value": "AAAAAgAAAJcAAAAVAw==",
    "type": "irq"
  },
  {
    "name": "Stop",
    "value": "AAAAAgAAAJcAAAAYAw==",
    "type": "irq"
  },
  {
    "name": "Pause",
    "value": "AAAAAgAAAJcAAAAZAw==",
    "type": "irq"
  },
  {
    "name": "Play",
    "value": "AAAAAgAAAJcAAAAaAw==",
    "type": "irq"
  },
  {
    "name": "Rewind",
    "value": "AAAAAgAAAJcAAAAbAw==",
    "type": "irq"
  },
  {
    "name": "Forward",
    "value": "AAAAAgAAAJcAAAAcAw==",
    "type": "irq"
  },
  {
    "name": "DOT",
    "value": "AAAAAgAAAJcAAAAdAw==",
    "type": "irq"
  },
  {
    "name": "Rec",
    "value": "AAAAAgAAAJcAAAAgAw==",
    "type": "irq"
  },
  {
    "name": "Return",
    "value": "AAAAAgAAAJcAAAAjAw==",
    "type": "irq"
  },
  {
    "name": "Blue",
    "value": "AAAAAgAAAJcAAAAkAw==",
    "type": "irq"
  },
  {
    "name": "Red",
    "value": "AAAAAgAAAJcAAAAlAw==",
    "type": "irq"
  },
  {
    "name": "Green",
    "value": "AAAAAgAAAJcAAAAmAw==",
    "type": "irq"
  },
  {
    "name": "Yellow",
    "value": "AAAAAgAAAJcAAAAnAw==",
    "type": "irq"
  },
  {
    "name": "SubTitle",
    "value": "AAAAAgAAAJcAAAAoAw==",
    "type": "irq"
  },
  {
    "name": "CS",
    "value": "AAAAAgAAAJcAAAArAw==",
    "type": "irq"
  },
  {
    "name": "BS",
    "value": "AAAAAgAAAJcAAAAsAw==",
    "type": "irq"
  },
  {
    "name": "Digital",
    "value": "AAAAAgAAAJcAAAAyAw==",
    "type": "irq"
  },
  {
    "name": "Options",
    "value": "AAAAAgAAAJcAAAA2Aw==",
    "type": "irq"
  },
  {
    "name": "Media",
    "value": "AAAAAgAAAJcAAAA4Aw==",
    "type": "irq"
  },
  {
    "name": "Prev",
    "value": "AAAAAgAAAJcAAAA8Aw==",
    "type": "irq"
  },
  {
    "name": "Next",
    "value": "AAAAAgAAAJcAAAA9Aw==",
    "type": "irq"
  },
  {
    "name": "DpadCenter",
    "value": "AAAAAgAAAJcAAABKAw==",
    "type": "irq"
  },
  {
    "name": "CursorUp",
    "value": "AAAAAgAAAJcAAABPAw==",
    "type": "irq"
  },
  {
    "name": "CursorDown",
    "value": "AAAAAgAAAJcAAABQAw==",
    "type": "irq"
  },
  {
    "name": "CursorLeft",
    "value": "AAAAAgAAAJcAAABNAw==",
    "type": "irq"
  },
  {
    "name": "CursorRight",
    "value": "AAAAAgAAAJcAAABOAw==",
    "type": "irq"
  },
  {
    "name": "ShopRemoteControlForcedDynamic",
    "value": "AAAAAgAAAJcAAABqAw==",
    "type": "irq"
  },
  {
    "name": "FlashPlus",
    "value": "AAAAAgAAAJcAAAB4Aw==",
    "type": "irq"
  },
  {
    "name": "FlashMinus",
    "value": "AAAAAgAAAJcAAAB5Aw==",
    "type": "irq"
  },
  {
    "name": "DemoMode",
    "value": "AAAAAgAAAJcAAAB8Aw==",
    "type": "irq"
  },
  {
    "name": "Analog",
    "value": "AAAAAgAAAHcAAAANAw==",
    "type": "irq"
  },
  {
    "name": "Mode3D",
    "value": "AAAAAgAAAHcAAABNAw==",
    "type": "irq"
  },
  {
    "name": "DigitalToggle",
    "value": "AAAAAgAAAHcAAABSAw==",
    "type": "irq"
  },
  {
    "name": "DemoSurround",
    "value": "AAAAAgAAAHcAAAB7Aw==",
    "type": "irq"
  },
  {
    "name": "*AD",
    "value": "AAAAAgAAABoAAAA7Aw==",
    "type": "irq"
  },
  {
    "name": "AudioMixUp",
    "value": "AAAAAgAAABoAAAA8Aw==",
    "type": "irq"
  },
  {
    "name": "AudioMixDown",
    "value": "AAAAAgAAABoAAAA9Aw==",
    "type": "irq"
  },
  {
    "name": "PhotoFrame",
    "value": "AAAAAgAAABoAAABVAw==",
    "type": "irq"
  },
  {
    "name": "Tv_Radio",
    "value": "AAAAAgAAABoAAABXAw==",
    "type": "irq"
  },
  {
    "name": "SyncMenu",
    "value": "AAAAAgAAABoAAABYAw==",
    "type": "irq"
  },
  {
    "name": "Hdmi1",
    "value": "AAAAAgAAABoAAABaAw==",
    "type": "irq"
  },
  {
    "name": "Hdmi2",
    "value": "AAAAAgAAABoAAABbAw==",
    "type": "irq"
  },
  {
    "name": "Hdmi3",
    "value": "AAAAAgAAABoAAABcAw==",
    "type": "irq"
  },
  {
    "name": "Hdmi4",
    "value": "AAAAAgAAABoAAABdAw==",
    "type": "irq"
  },
  {
    "name": "TopMenu",
    "value": "AAAAAgAAABoAAABgAw==",
    "type": "irq"
  },
  {
    "name": "PopUpMenu",
    "value": "AAAAAgAAABoAAABhAw==",
    "type": "irq"
  },
  {
    "name": "OneTouchTimeRec",
    "value": "AAAAAgAAABoAAABkAw==",
    "type": "irq"
  },
  {
    "name": "OneTouchView",
    "value": "AAAAAgAAABoAAABlAw==",
    "type": "irq"
  },
  {
    "name": "DUX",
    "value": "AAAAAgAAABoAAABzAw==",
    "type": "irq"
  },
  {
    "name": "FootballMode",
    "value": "AAAAAgAAABoAAAB2Aw==",
    "type": "irq"
  },
  {
    "name": "iManual",
    "value": "AAAAAgAAABoAAAB7Aw==",
    "type": "irq"
  },
  {
    "name": "Netflix",
    "value": "AAAAAgAAABoAAAB8Aw==",
    "type": "irq"
  },
  {
    "name": "Assists",
    "value": "AAAAAgAAAMQAAAA7Aw==",
    "type": "irq"
  },
  {
    "name": "FeaturedApp",
    "value": "AAAAAgAAAMQAAABEAw==",
    "type": "irq"
  },
  {
    "name": "FeaturedAppVOD",
    "value": "AAAAAgAAAMQAAABFAw==",
    "type": "irq"
  },
  {
    "name": "GooglePlay",
    "value": "AAAAAgAAAMQAAABGAw==",
    "type": "irq"
  },
  {
    "name": "ActionMenu",
    "value": "AAAAAgAAAMQAAABLAw==",
    "type": "irq"
  },
  {
    "name": "Help",
    "value": "AAAAAgAAAMQAAABNAw==",
    "type": "irq"
  },
  {
    "name": "TvSatellite",
    "value": "AAAAAgAAAMQAAABOAw==",
    "type": "irq"
  },
  {
    "name": "WirelessSubwoofer",
    "value": "AAAAAgAAAMQAAAB+Aw==",
    "type": "irq"
  },
  {
    "name": "AndroidMenu",
    "value": "AAAAAgAAAMQAAABPAw==",
    "type": "irq"
  },
  {
    "name": "RecorderMenu",
    "value": "AAAAAgAAAMQAAABIAw==",
    "type": "irq"
  },
  {
    "name": "STBMenu",
    "value": "AAAAAgAAAMQAAABJAw==",
    "type": "irq"
  },
  {
    "name": "MuteOn",
    "value": "AAAAAgAAAMQAAAAsAw==",
    "type": "irq"
  },
  {
    "name": "MuteOff",
    "value": "AAAAAgAAAMQAAAAtAw==",
    "type": "irq"
  },
  {
    "name": "AudioOutput_AudioSystem",
    "value": "AAAAAgAAAMQAAAAiAw==",
    "type": "irq"
  },
  {
    "name": "AudioOutput_TVSpeaker",
    "value": "AAAAAgAAAMQAAAAjAw==",
    "type": "irq"
  },
  {
    "name": "AudioOutput_Toggle",
    "value": "AAAAAgAAAMQAAAAkAw==",
    "type": "irq"
  },
  {
    "name": "ApplicationLauncher",
    "value": "AAAAAgAAAMQAAAAqAw==",
    "type": "irq"
  },
  {
    "name": "YouTube",
    "value": "AAAAAgAAAMQAAABHAw==",
    "type": "irq"
  }
]
EOF
}

function runCommand() {
	if [[ $# -eq 0 ]]; then 
		echo -e "\tmissing command specification!"
		help
		exit 1
	fi

	local command="${1}"
	shift
	case "${command}" in
		setInput)
			if [[ $# -eq 0 ]]; then
				echo -e "\tmissing input specification"
				help
				exit 1
			fi
			setInput "${1}"
			shift
			;;	
		getInputs)
			getInputs
			;;	
		getInputNames)
			getInputNames
			;;	
		getInputNameToUrlMapping)
			getInputNameToUrlMapping
			;;	
		getInputUrls)
			getInputUrls
			;;	
		changeAudioSink)
			changeAudioSink
			;;	
		changeDefaultAudioSink)
			;;	

		execute-irq) 			
			cmd=$(irqCommandsJson | jq -r ".[] | select (.name==\"${1//\"/}\") | .value")
			invokeIrcCommand ${cmd}
			;;
		list-irq-data)
			irqCommandsJson
			;;
		irq)
				selection=$(irqCommandsJson | jq .[].name | nl -v 0| fzf --with-nth 2.. | awk '{print $1}')
				if [[ -n "${selection}" ]]; then 
					cmd=$(irqCommandsJson | jq -r ".[${selection}].value")
					invokeIrcCommand $cmd
					#echo $cmd
				else 
					echo "cancelled."	
				fi

			;;
		multi-irq)
				irqCommandsJson | jq .[].name | fzf --bind "enter:execute-silent( ${THIS_SCRIPT} execute-irq {} )"
			;;	
		autocomplete)
			autocomplete ${1-sonyTv}
			;;	

		*)
			echo -e "\tunknown command!"
			help
			exit 1
			;;
	esac
	
}

#â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€” MAIN â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”


SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
THIS_SCRIPT="${SCRIPTPATH}/$(basename ${0})"
URL=http://192.168.1.99/sony
PASS=pass


runCommand "$@" 

